{"ast":null,"code":"import { createSelector } from 'reselect'; //input selector\n\nconst selectCart = state => state.cart; //now this is a memoize selector\n\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["C:/Users/Manuel Rocha/Documents/Coding C/Udemy/ReactDev-Redux-Hooks-GraphQL/crwn-clothing/client/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumalatedQuantity","cartItem","quantity","selectCartTotal","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B,C,CAEA;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC,C,CAEA;;;AACA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CAAC,CAACC,UAAD,CAAD,EAAgBE,IAAD,IAAUA,IAAI,CAACE,SAA9B,CAAtC;AAEP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAAC,CAACC,UAAD,CAAD,EAAgBE,IAAD,IAAUA,IAAI,CAACI,MAA9B,CAAvC;AAEP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAAC,CAACI,eAAD,CAAD,EAAqBC,SAAD,IACpEA,SAAS,CAACI,MAAV,CAAiB,CAACC,mBAAD,EAAsBC,QAAtB,KAAmCD,mBAAmB,GAAGC,QAAQ,CAACC,QAAnF,EAA6F,CAA7F,CADgD,CAA3C;AAIP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CAAC,CAACI,eAAD,CAAD,EAAqBC,SAAD,IAC/DA,SAAS,CAACI,MAAV,CACE,CAACC,mBAAD,EAAsBC,QAAtB,KAAmCD,mBAAmB,GAAGC,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACG,KADxF,EAEE,CAFF,CAD2C,CAAtC","sourcesContent":["import { createSelector } from 'reselect';\r\n\r\n//input selector\r\nconst selectCart = (state) => state.cart;\r\n\r\n//now this is a memoize selector\r\nexport const selectCartItems = createSelector([selectCart], (cart) => cart.cartItems);\r\n\r\nexport const selectCartHidden = createSelector([selectCart], (cart) => cart.hidden);\r\n\r\nexport const selectCartItemsCount = createSelector([selectCartItems], (cartItems) =>\r\n  cartItems.reduce((accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity, 0)\r\n);\r\n\r\nexport const selectCartTotal = createSelector([selectCartItems], (cartItems) =>\r\n  cartItems.reduce(\r\n    (accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity * cartItem.price,\r\n    0\r\n  )\r\n);\r\n"]},"metadata":{},"sourceType":"module"}