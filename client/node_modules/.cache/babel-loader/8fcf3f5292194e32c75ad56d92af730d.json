{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst REACT_APP_FIREBASE_API_KEY = process.env.REACT_APP_FIREBASE_API_KEY;\nconst REACT_APP_FIREBASE_AUTH_DOMAIN = process.env.REACT_APP_FIREBASE_AUTH_DOMAIN;\nconst REACT_APP_FIREBASE_DATABASE_URL = process.env.REACT_APP_FIREBASE_DATABASE_URL;\nconst REACT_APP_FIREBASE_PROJECT_ID = process.env.REACT_APP_FIREBASE_PROJECT_ID;\nconst REACT_APP_FIREBASE_STORAGE_BUCKET = process.env.REACT_APP_FIREBASE_STORAGE_BUCKET;\nconst REACT_APP_FIREBASE_MESSAGE_SENDER_ID = process.env.REACT_APP_FIREBASE_MESSAGE_SENDER_ID;\nconst REACT_APP_FIREBASE_APP_ID = process.env.REACT_APP_FIREBASE_APP_ID;\nconst REACT_APP_FIREBASE_MEASUREMENT_ID = process.env.REACT_APP_FIREBASE_MEASUREMENT_ID;\nconst config = {\n  apiKey: SE_API_KEY,\n  authDomain: SE_AUTH_DOMAIN,\n  databaseURL: SE_DATABASE_URL,\n  projectId: SE_PROJECT_ID,\n  storageBucket: SE_STORAGE_BUCKET,\n  messagingSenderId: SE_MESSAGE_SENDER_ID,\n  appId: SE_APP_ID,\n  measurementId: SE_MEASUREMENT_ID\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error createing user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/Manuel Rocha/Documents/Coding C/Udemy/ReactDev-Redux-Hooks-GraphQL/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","REACT_APP_FIREBASE_API_KEY","process","env","REACT_APP_FIREBASE_AUTH_DOMAIN","REACT_APP_FIREBASE_DATABASE_URL","REACT_APP_FIREBASE_PROJECT_ID","REACT_APP_FIREBASE_STORAGE_BUCKET","REACT_APP_FIREBASE_MESSAGE_SENDER_ID","REACT_APP_FIREBASE_APP_ID","REACT_APP_FIREBASE_MEASUREMENT_ID","config","apiKey","SE_API_KEY","authDomain","SE_AUTH_DOMAIN","databaseURL","SE_DATABASE_URL","projectId","SE_PROJECT_ID","storageBucket","SE_STORAGE_BUCKET","messagingSenderId","SE_MESSAGE_SENDER_ID","appId","SE_APP_ID","measurementId","SE_MEASUREMENT_ID","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,0BAA0B,GAAGC,OAAO,CAACC,GAAR,CAAYF,0BAA/C;AACA,MAAMG,8BAA8B,GAAGF,OAAO,CAACC,GAAR,CAAYC,8BAAnD;AACA,MAAMC,+BAA+B,GAAGH,OAAO,CAACC,GAAR,CAAYE,+BAApD;AACA,MAAMC,6BAA6B,GAAGJ,OAAO,CAACC,GAAR,CAAYG,6BAAlD;AACA,MAAMC,iCAAiC,GAAGL,OAAO,CAACC,GAAR,CAAYI,iCAAtD;AACA,MAAMC,oCAAoC,GAAGN,OAAO,CAACC,GAAR,CAAYK,oCAAzD;AACA,MAAMC,yBAAyB,GAAGP,OAAO,CAACC,GAAR,CAAYM,yBAA9C;AACA,MAAMC,iCAAiC,GAAGR,OAAO,CAACC,GAAR,CAAYO,iCAAtD;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAEC,UADK;AAEbC,EAAAA,UAAU,EAAEC,cAFC;AAGbC,EAAAA,WAAW,EAAEC,eAHA;AAIbC,EAAAA,SAAS,EAAEC,aAJE;AAKbC,EAAAA,aAAa,EAAEC,iBALF;AAMbC,EAAAA,iBAAiB,EAAEC,oBANN;AAObC,EAAAA,KAAK,EAAEC,SAPM;AAQbC,EAAAA,aAAa,EAAEC;AARF,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGV;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,KAAK,CAACG,OAA1C;AACD;AACF;;AACD,SAAOf,OAAP;AACD,CAvBM;AAyBP/B,QAAQ,CAAC+C,aAAT,CAAuBpC,MAAvB;AAEA,OAAO,MAAMqC,IAAI,GAAGhD,QAAQ,CAACgD,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGhC,QAAQ,CAACgC,SAAT,EAAlB;AAEP,MAAMiB,QAAQ,GAAG,IAAIjD,QAAQ,CAACgD,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAejD,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst REACT_APP_FIREBASE_API_KEY = process.env.REACT_APP_FIREBASE_API_KEY;\r\nconst REACT_APP_FIREBASE_AUTH_DOMAIN = process.env.REACT_APP_FIREBASE_AUTH_DOMAIN;\r\nconst REACT_APP_FIREBASE_DATABASE_URL = process.env.REACT_APP_FIREBASE_DATABASE_URL;\r\nconst REACT_APP_FIREBASE_PROJECT_ID = process.env.REACT_APP_FIREBASE_PROJECT_ID;\r\nconst REACT_APP_FIREBASE_STORAGE_BUCKET = process.env.REACT_APP_FIREBASE_STORAGE_BUCKET;\r\nconst REACT_APP_FIREBASE_MESSAGE_SENDER_ID = process.env.REACT_APP_FIREBASE_MESSAGE_SENDER_ID;\r\nconst REACT_APP_FIREBASE_APP_ID = process.env.REACT_APP_FIREBASE_APP_ID;\r\nconst REACT_APP_FIREBASE_MEASUREMENT_ID = process.env.REACT_APP_FIREBASE_MEASUREMENT_ID;\r\n\r\nconst config = {\r\n  apiKey: SE_API_KEY,\r\n  authDomain: SE_AUTH_DOMAIN,\r\n  databaseURL: SE_DATABASE_URL,\r\n  projectId: SE_PROJECT_ID,\r\n  storageBucket: SE_STORAGE_BUCKET,\r\n  messagingSenderId: SE_MESSAGE_SENDER_ID,\r\n  appId: SE_APP_ID,\r\n  measurementId: SE_MEASUREMENT_ID,\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  if (!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n  const snapShot = await userRef.get();\r\n\r\n  if (!snapShot.exists) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalData,\r\n      });\r\n    } catch (error) {\r\n      console.log('error createing user', error.message);\r\n    }\r\n  }\r\n  return userRef;\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}