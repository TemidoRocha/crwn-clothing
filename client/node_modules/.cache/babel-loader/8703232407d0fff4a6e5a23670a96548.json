{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manuel Rocha\\\\Documents\\\\Coding C\\\\Udemy\\\\ReactDev-Redux-Hooks-GraphQL\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { fetchCollectinStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nimport updateCollections from '../../redux/shop/shop.actions';\nimport CollectionsOverview from './../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectinStartAsync\n    } = this.props;\n    fetchCollectinStartAsync();\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 30\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:categoryId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 30\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  selectIsCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectinStartAsync: () => dispatch(fetchCollectinStartAsync())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage); //SINCE WE ARE NOW USING REDUX-THUNK TO TAKE CARE OF ASYNC THE CODE BELLOW IS NO LONGER NEEDED\n// componentDidMount() {\n// const { updateCollections } = this.props;\n// const collectionRef = firestore.collection('collections');\n//using firebase library                                  +<>++<>+<>+<>+<>+<>+<>+\n// this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async (snapshot) => {\n//   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//   updateCollections(collectionsMap);\n//   this.setState({ loading: false });\n// });\n//using promisses pattern                                 +<>++<>+<>+<>+<>+<>+<>+\n// collectionRef.get().then((snapshot) => {\n//   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//   updateCollections(collectionsMap);\n//   this.setState({ loading: false });\n// });\n//using fetch just to see how deep nested it is           +<>++<>+<>+<>+<>+<>+<>+\n// fetch(\n//   'https://firestore.googleapis.com/v1/projects/crwn-clothing-udemy/databases/(default)/documents/collections'\n// )\n//   .then((response) => response.json())\n//   .then((collections) => console.log(collections));\n// }","map":{"version":3,"sources":["C:/Users/Manuel Rocha/Documents/Coding C/Udemy/ReactDev-Redux-Hooks-GraphQL/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","fetchCollectinStartAsync","selectIsCollectionFetching","updateCollections","CollectionsOverview","CollectionPage","WithSpinner","CollectionsOverviewWithSpinner","CollectionsPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","path","loading","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,0BAAT,QAA2C,iCAA3C;AAEA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAOC,mBAAP,MAAgC,wEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACF,mBAAD,CAAlD;AACA,MAAMI,0BAA0B,GAAGF,WAAW,CAACD,cAAD,CAA9C;;AAEA,MAAMI,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEV,MAAAA;AAAF,QAA+B,KAAKW,KAA1C;AACAX,IAAAA,wBAAwB;AACzB;;AAEDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKF,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACC,IAAK,EAFtB;AAGE,MAAA,MAAM,EAAGH,KAAD,iBAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEI;AAA3C,SAAwDJ,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACC,IAAK,cADtB;AAEE,MAAA,MAAM,EAAGH,KAAD,iBAAW,oBAAC,0BAAD;AAA4B,QAAA,SAAS,EAAEI;AAAvC,SAAoDJ,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAaD;;AArBoC;;AAwBvC,MAAMK,eAAe,GAAGlB,wBAAwB,CAAC;AAC/CG,EAAAA,0BAA0B,EAAEA;AADmB,CAAD,CAAhD;;AAIA,MAAMgB,kBAAkB,GAAIC,QAAD,KAAe;AACxClB,EAAAA,wBAAwB,EAAE,MAAMkB,QAAQ,CAAClB,wBAAwB,EAAzB;AADA,CAAf,CAA3B;;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCT,QAAlC,CAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchCollectinStartAsync } from '../../redux/shop/shop.actions';\r\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\r\n\r\nimport updateCollections from '../../redux/shop/shop.actions';\r\nimport CollectionsOverview from './../../components/collections-overview/collections-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n  componentDidMount() {\r\n    const { fetchCollectinStartAsync } = this.props;\r\n    fetchCollectinStartAsync();\r\n  }\r\n\r\n  render() {\r\n    const { match } = this.props;\r\n    return (\r\n      <div className=\"shop-page\">\r\n        <Route\r\n          exact\r\n          path={`${match.path}`}\r\n          render={(props) => <CollectionsOverviewWithSpinner isLoading={loading} {...props} />}\r\n        />\r\n        <Route\r\n          path={`${match.path}/:categoryId`}\r\n          render={(props) => <CollectionsPageWithSpinner isLoading={loading} {...props} />}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  selectIsCollectionFetching: selectIsCollectionFetching,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchCollectinStartAsync: () => dispatch(fetchCollectinStartAsync()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n\r\n//SINCE WE ARE NOW USING REDUX-THUNK TO TAKE CARE OF ASYNC THE CODE BELLOW IS NO LONGER NEEDED\r\n// componentDidMount() {\r\n// const { updateCollections } = this.props;\r\n// const collectionRef = firestore.collection('collections');\r\n//using firebase library                                  +<>++<>+<>+<>+<>+<>+<>+\r\n// this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async (snapshot) => {\r\n//   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n//   updateCollections(collectionsMap);\r\n//   this.setState({ loading: false });\r\n// });\r\n//using promisses pattern                                 +<>++<>+<>+<>+<>+<>+<>+\r\n// collectionRef.get().then((snapshot) => {\r\n//   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n//   updateCollections(collectionsMap);\r\n//   this.setState({ loading: false });\r\n// });\r\n//using fetch just to see how deep nested it is           +<>++<>+<>+<>+<>+<>+<>+\r\n// fetch(\r\n//   'https://firestore.googleapis.com/v1/projects/crwn-clothing-udemy/databases/(default)/documents/collections'\r\n// )\r\n//   .then((response) => response.json())\r\n//   .then((collections) => console.log(collections));\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}