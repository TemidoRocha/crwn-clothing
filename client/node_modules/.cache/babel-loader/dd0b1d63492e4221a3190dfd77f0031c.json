{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectinFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectinStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectinStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectinFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/Users/Manuel Rocha/Documents/Coding C/Udemy/ReactDev-Redux-Hooks-GraphQL/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionStart","type","FETCH_COLLECTIONS_START","fetchCollectionSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectinFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectinStartAsync","dispatch","collectionRef","collection","fetchCollectinStart","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,oBAAoB,GAAG,OAAO;AACzCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADmB,CAAP,CAA7B;AAIP,OAAO,MAAMC,sBAAsB,GAAIC,cAAD,KAAqB;AACzDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADmC;AAEzDC,EAAAA,OAAO,EAAEF;AAFgD,CAArB,CAA/B;AAKP,OAAO,MAAMG,qBAAqB,GAAIC,YAAD,KAAmB;AACtDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBADgC;AAEtDH,EAAAA,OAAO,EAAEE;AAF6C,CAAnB,CAA9B;AAKP,OAAO,MAAME,wBAAwB,GAAG,MAAM;AAC5C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACG,mBAAmB,EAApB,CAAR;AAEAF,IAAAA,aAAa,CACVG,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMb,cAAc,GAAGL,+BAA+B,CAACkB,QAAD,CAAtD;AACAN,MAAAA,QAAQ,CAACR,sBAAsB,CAACC,cAAD,CAAvB,CAAR;AACD,KALH,EAMGc,KANH,CAMUC,KAAD,IAAWR,QAAQ,CAACJ,qBAAqB,CAACY,KAAK,CAACC,OAAP,CAAtB,CAN5B;AAOD,GAXD;AAYD,CAbM","sourcesContent":["import ShopActionTypes from './shop.types';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nexport const fetchCollectionStart = () => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\r\n});\r\n\r\nexport const fetchCollectionSuccess = (collectionsMap) => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n  payload: collectionsMap,\r\n});\r\n\r\nexport const fetchCollectinFailure = (errorMessage) => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n  payload: errorMessage,\r\n});\r\n\r\nexport const fetchCollectinStartAsync = () => {\r\n  return (dispatch) => {\r\n    const collectionRef = firestore.collection('collections');\r\n    dispatch(fetchCollectinStart());\r\n\r\n    collectionRef\r\n      .get()\r\n      .then((snapshot) => {\r\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n        dispatch(fetchCollectionSuccess(collectionsMap));\r\n      })\r\n      .catch((error) => dispatch(fetchCollectinFailure(error.message)));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}