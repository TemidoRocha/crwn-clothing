{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('i am fired');\n  const collectionRef = firestore.collection('collections');\n  const snapshot = collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/Manuel Rocha/Documents/Coding C/Udemy/ReactDev-Redux-Hooks-GraphQL/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","then","collectionsMap","dispatch","catch","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,QAAMC,QAAQ,GAAGF,aAAa,CAC3BG,GADc,GAEdC,IAFc,CAERF,QAAD,IAAc;AAClB,UAAMG,cAAc,GAAGZ,+BAA+B,CAACS,QAAD,CAAtD;AACAI,IAAAA,QAAQ,CAACZ,uBAAuB,CAACW,cAAD,CAAxB,CAAR;AACD,GALc,EAMdE,KANc,CAMPC,KAAD,IAAWF,QAAQ,CAACX,uBAAuB,CAACa,KAAK,CAACC,OAAP,CAAxB,CANX,CAAjB;AAOD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMnB,SAAS,CAACK,eAAe,CAACe,uBAAjB,EAA0Cd,qBAA1C,CAAf;AACD","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n  yield console.log('i am fired');\r\n\r\n  const collectionRef = firestore.collection('collections');\r\n  const snapshot = collectionRef\r\n    .get()\r\n    .then((snapshot) => {\r\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n      dispatch(fetchCollectionsSuccess(collectionsMap));\r\n    })\r\n    .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}